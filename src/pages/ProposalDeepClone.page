<!-- 
    Apttus Proposal-Config Integration
    ProposalDeepClone
    Summary
    -------
    Clones the quote/proposal including the finalized product configuration.
    
    parameters
    ==========
    Name            | Required | Description
    ================|==========|======================================================================================
    id              | Yes      | The record id of the quote/proposal to clone
                    |          |
    pageMode        | No       | The display mode for the new quote/proposal record after it is created. 
                    |          | Valid values are : edit, detail. The default value is edit. 
    ===================================================================================================================
    
 -->
<apex:page standardController="Apttus_Proposal__Proposal__c" 
           extensions="APTS_OverrideProposalCloneExt" >
    
    <apex:stylesheet value="{!URLFOR($Resource.Apttus_Proposal__YUILibrary, '/yui/build/assets/skins/sam/skin.css')}" />
 
    <apex:includescript value="{!URLFOR($Resource.Apttus_Proposal__YUILibrary, '/yui/build/yahoo-dom-event/yahoo-dom-event.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus_Proposal__YUILibrary, '/yui/build/dragdrop/dragdrop-min.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus_Proposal__YUILibrary, '/yui/build/container/container-min.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus_Proposal__YUILibrary, '/yui/build/animation/animation-min.js')}" />
    
    
    
        <script type="text/javascript">
            Visualforce.remoting.timeout = 120000; // Set timeout at page level
            
            function CreateChildeRecords(DisplayError, NewProductConfigIds ,OldConfigID ,NewProposalID,DisplayError  ) {
               
                debugger;
                if(DisplayError == 'true'){
                    YAHOO.force.com.waitPanel.hide();
                }
                else if(NewProductConfigIds != ''){
                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.APTS_OverrideProposalCloneExt.CloneChildRecords}',
                        NewProductConfigIds , OldConfigID , NewProposalID ,
                        function(result, event){
                            if (event.status) {
                                CreateLineItemRecords(NewProductConfigIds , OldConfigID , NewProposalID,DisplayError );
                            } else if (event.type === 'exception') {
                                YAHOO.force.com.waitPanel.hide();
                                alert(event.message);
                            } else {
                                YAHOO.force.com.waitPanel.hide();
                                alert(event.message);
                            }
                        }, 
                        {escape: true}
                    );
                }else{
                    window.open('/' + NewProposalID +'/e?retURL=' + NewProposalID ,'_self');
                    YAHOO.force.com.waitPanel.hide();                
                }
            }
            
            function CreateLineItemRecords(NewProductConfigIds ,OldConfigID ,NewProposalID, DisplayError ) {
                debugger;
                
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.APTS_OverrideProposalCloneExt.ClonLineItemRecords}',
                    NewProductConfigIds , OldConfigID , NewProposalID , '{!sRecordId}',
                    function(result, event){
                        if (event.status) {
                            YAHOO.force.com.waitPanel.hide();
                            if(DisplayError  == 'false'){
                                window.open('/' + NewProposalID +'/e?retURL=' + NewProposalID ,'_self');
                            }
                            
                        } else if (event.type === 'exception') {
                            YAHOO.force.com.waitPanel.hide();
                            alert(event.message);
                        } else {
                            YAHOO.force.com.waitPanel.hide();
                            alert(event.message);

                        }
                    }, 
                    {escape: true}
                );
            }
        
            // Create a namespace for our custom functions
            YAHOO.namespace("force.com");
            
            // wait panel
            
            /**
             * Builds the wait panel.
             */
            YAHOO.force.com.buildWaitPanel = function() {
                document.body.className = document.body.className + " yui-skin-sam";
                YAHOO.force.com.waitPanel = new YAHOO.widget.Panel(
                    "waitPanel",  // The id of our dialog container
                    { 
                            width           :   "300px", // You can play with this until it's right
                            visible         :   false,   // Should be invisible when rendered
                            draggable       :   false,   // Make the dialog draggable
                            close           :   false,   // Don't include a close title button
                            modal           :   true,    // Make it modal
                            fixedCenter     :   true,    // Keep centered if window is scrolled
                            zindex          :   40,      // Make sure it's on top of everything
                            constraintoviewport: true,
                            
                            // This line adds the appear/disapper fade effect
                            effect          :   {effect:YAHOO.widget.ContainerEffect.FADE,duration:0.25}
                                        
                    }
                );
                
                // header
                YAHOO.force.com.waitPanel.setHeader("{!$Label.apttus_qpconfig__clonequoteorproposal}");
                // set image
                YAHOO.force.com.waitPanel.setBody('<center><img src="{!URLFOR($Resource.Apttus_Config2__Image_LoadingPage)}" /></center>');
                // Render the dialog to the document.body level of the DOM
                YAHOO.force.com.waitPanel.render(document.body);
                
            }
            
            // Function called when the DOM is ready to create the dialog,
            // render the dialog into the document body, add our dialog skin
            // css to the body tag, and wire up the buttons on our dialog   
            YAHOO.force.com.onDOMReady = function() {
                
                // build the wait panel
                YAHOO.force.com.buildWaitPanel();
                // show modal panel
                YAHOO.force.com.waitPanel.show();
                // invoke onload function
                debugger;
                
                onLoad();   
                
            }
            
            // build the tree as soon as the DOM is in a usable state
            YAHOO.util.Event.onDOMReady(YAHOO.force.com.onDOMReady); 
        </script>
    
    
    <apex:form id="acceptQuoteOrProposal">
    
        <!--  required fields -->
        <apex:outputText value="{!Apttus_Proposal__Proposal__c.Name}" rendered="false" />
        <apex:outputText value="{!Apttus_Proposal__Proposal__c.Apttus_Proposal__Proposal_Name__c}" rendered="false" />
        <apex:outputText value="{!Apttus_Proposal__Proposal__c.Apttus_Proposal__Opportunity__c}" rendered="false" />
        <apex:outputText value="{!Apttus_Proposal__Proposal__c.Apttus_Proposal__Approval_Stage__c}" rendered="false" />
        <apex:outputText value="{!Apttus_Proposal__Proposal__c.Apttus_Proposal__Primary__c}" rendered="false" />
        
        <apex:outputPanel id="idOutputPanel" >
            <apex:pageBlock mode="edit" rendered="{!DisplayError}" >
                <apex:pageMessages />
                <apex:pageBlockButtons location="bottom" >
                    <apex:commandButton action="{!doCancel}" value="{!$Label.apttus_qpconfig__cancel}" immediate="true" />
                </apex:pageBlockButtons>
            </apex:pageBlock>
        </apex:outputPanel>
        
        <apex:actionFunction name="onLoad" 
                             action="{!init}"
                             reRender="script,idOutputPanel" 
                             oncomplete="CreateChildeRecords('{!DisplayError}','{!NewProductConfigIds}','{!OldConfigID}','{!NewProposalID}','{!DisplayError}')">
        </apex:actionFunction>
        
    </apex:form>
    
</apex:page>